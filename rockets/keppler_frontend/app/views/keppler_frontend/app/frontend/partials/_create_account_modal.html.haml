%script{ src: '/assets/js/jquery-validate.js' }
.modal.fade.account-modal{ "aria-hidden" => "true", "aria-labelledby" => "exampleModalLabel", role: "dialog", id: "#{section.name.split(' ').join()}-#{table.split(' ').join('')}" }
  .modal-dialog{role: "document"}
    .modal-content
      .modal-header
        %h2.m-0 Crear cuenta #{table.titleize}
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", type: "button"}
          %i.icofont-close.icon_custom.icon--large
      .modal-body
        = simple_form_for @client, url: app_manage_client_path, html: { class: "form-#{table.downcase} " } do |f|
          .form-group
            %label.label_custom Cédula
            %input.form-control.input_custom{ :required => "", type:'number', name: 'client[identification]', onkeyup: "makeRequest('#{table.downcase}')", class: "identification-#{table.downcase}", min: 0, autofocus: true }
            .hidden.preloader
              .content-spinner.spinner-create{ style: 'z-index: -1;'}
                .spinner-border{:role => "status"}
                  %span.sr-only Loading...
          .fields.hidden-field
            -# .hidden
            .form-group
              %label.label_custom Nombres y apellidos
              %input.form-control.input_custom.name{ name: 'client[name]', :required => "", :autocomplete => "off" }
            .form-group
              %label.label_custom Email
              %input.form-control.input_custom.email{ name: 'client[email]', :required => "", :autocomplete => "off" }
            .form-group
              %label.label_custom Dirección
              %input.form-control.input_custom.address{ type: 'text', name: 'client[address]', :required => "", :autocomplete => "off" }
            .form-group
              %label.label_custom Teléfono
              %input.form-control.input_custom.phone{ type: 'tel', name: 'client[phone]', min: 0, :required => "", :autocomplete => "off" }
            .form-group
              %input{ type: 'hidden', name: 'table', value: table }
              %input{ type: 'hidden', name: 'section', value: section.name }
          .float-right.mt-2
            = f.submit 'SIGUIENTE', class: 'btn btn_custom btn--medium btn--filled submit-btn', disabled: 'disabled'

:scss
  .hidden-field {
    opacity: 0;
    height:0;
  }
  input {
    margin-bottom: 5px;
  }
  .error {
    color: rgba(250,0,0,0.73);
    font-size: 14px;
    padding: 5px;
    border-radius: 5px;
    background-color: rgba(0,0,0,0.4)
  }
  input[type=number]::-webkit-inner-spin-button,
  input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type=number] {
    -moz-appearance:textfield;
  }
:javascript
  $.validator.addMethod("phoneno", function(phone_number, element) {
    phone_number = phone_number.replace(/\s+/g, "");
    return this.optional(element) || phone_number.length > 9 &&
    phone_number.match(/^((\+[1-9]{1,4}[ \-]*)|(\([0-9]{2,3}\)[ \-]*)|([0-9]{2,4})[ \-]*)*?[0-9]{3,4}?[ \-]*[0-9]{3,4}?$/);
  }, "Por favor introduzca sólo números");

  $(function($) {
    var validator = $('#new_client').validate({
      rules: {
        'client[identification]': {
          required: true
        },
        'client[name]': {
          required: true
        },
        'client[email]': {
          required: true,
          email: true
        },
        'client[address]': {
          required: true,
        },
        'client[phone]': {
          phoneno: true,
          required: true
        }
      },
      messages: {
        'client[identification]': {
          required: "Campo obligatorio"
        },
        'client[name]': {
          required: "Campo obligarotio"
        },
        'client[email]': {
          email:"El email no es valido",
          required: "Campo obligatorio"
        },
        'client[phone]': {
          required: "Campo obligatorio"
        },
        'client[address]': {
          required: "Campo obligatorio"
        }
      },

    });
  });

  var time = ''

  function makeRequest(table) {
    clearTimeout(time);
    time = setTimeout(function() {
      var identification = $(".identification-"+table).val()

      $.ajax({
        url: "/get_client",
        type: "POST",
        data: { identification: identification },
        dataType: "JSON",
        beforeSend: function() {
          $('.preloader').removeClass('hidden');
        },
        success: function(data) {
          handleData(data);
        },
        error: function() {
          alertify.notify('Revise su conexión a internet', 'error');
        }
      });
    }, 2000);
  }

  function handleData(data) {
    $('.submit-btn').removeAttr('disabled')
    data ? displayValues(data) : clearValues()
  }

  function displayValues(data) {
    $('.fields').find('.form-control').attr('disabled', 'disabled')
    $('.preloader').addClass('hidden-field');
    $('.fields').removeClass('hidden-field');
    $('.name').val(data.name)
    $('.email').val(data.email)
    $('.address').val(data.address)
    $('.phone').val(data.phone)
  }

  function clearValues() {
    $('.form-control').removeAttr('disabled')
    $('.preloader').addClass('hidden-field');
    $('.fields').removeClass('hidden-field');
    $('.name').val('')
    $('.email').val('')
    $('.address').val('')
    $('.phone').val('')
    alertify.notify('El usuario no ha sido registrado', 'error');
  }

  function submit(table) {
    $('.form-'+table).submit()
  }

  $('.account-modal').on('hidden.bs.modal', function () {
    $('.fields').find('.form-control').attr('disabled', 'disabled')
    $('.fields').addClass('hidden-field');
  })
